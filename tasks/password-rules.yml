---
- name: PASSWORD RULES | 1.0 | Ensure passwords cannot be re-used
  ansible.builtin.lineinfile:
    state: present
    dest: /etc/pam.d/common-password
    regexp: '^(# *)?{{ item }}'
    line: '{{ item }}'
  loop:
    - "auth      sufficient   pam_unix.so likeauth nullok"
    - "password 	sufficient	 pam_unix.so remember=4"

- name: PASSWORD RULES | 2.0 | Ensure that a minimum password policy is forced for strong passwords
  ansible.builtin.lineinfile:
    state: present
    dest: /etc/pam.d/common-password
    regexp: '^(/lib/security/$ISA/pam_cracklib.so)'
    line: /lib/security/$ISA/pam_cracklib.so retry=3 minlen=8 lcredit=-1 ucredit=-2 dcredit=-2 ocredit=-1

- name: PASSWORD RULES | 3.0 | Ensure accounts are locked temporarily after {{ pass_lock_attempts }} failed attempts to login
  ansible.builtin.blockinfile:
    path: /etc/pam.d/common-password
    block: |
      auth required pam_env.so 
      auth required pam_faillock.so preauth audit silent deny={{ pass_lock_attempts }} unlock_time={{ pass_unlock_time }} 
      auth [success=1 default=bad] pam_unix.so 
      auth [default=die] pam_faillock.so authfail audit deny={{ pass_lock_attempts }} unlock_time={{ pass_unlock_time }} 
      auth sufficient pam_faillock.so authsucc audit deny={{ pass_lock_attempts }} unlock_time={{ pass_unlock_time }} 
      auth required pam_deny.so
  when: pass_lock_accounts

- name: PASSWORD RULES | 4.0 | Ensure that passwords expire on configured interval
  ansible.builtin.lineinfile:
    path: /etc/login.defs
    regexp: '^(# *)?PASS_MAX_DAYS'
    line: 'PASS_MAX_DAYS   {{ pass_expire_days }}'
  when: pass_expires
