---
- name: Ensure passwords cannot be re-used
  ansible.builtin.blockinfile:
    path: /etc/pam.d/common-password
    block: |
      auth      sufficient   pam_unix.so likeauth nullok
      password 	sufficient	 pam_unix.so remember=4

- name: Ensure that a minimum password policy is forced for strong passwords
  ansible.builtin.blockinfile:
    path: /etc/pam.d/system-auth
    block: |
      /lib/security/$ISA/pam_cracklib.so retry=3 minlen=8 lcredit=-1 ucredit=-2 dcredit=-2 ocredit=-1

- name: Ensure accounts are locked temporarily after 5 failed attempts to login
  block:
    - name: Add required config to /etc/pam.d/password-auth
        ansible.builtin.blockinfile:
          path: /etc/pam.d/password-auth
          block: |
            auth required pam_env.so 
            auth required pam_faillock.so preauth audit silent deny=5 unlock_time={{ pass_unlock_time }} 
            auth [success=1 default=bad] pam_unix.so 
            auth [default=die] pam_faillock.so authfail audit deny=5 unlock_time={{ pass_unlock_time }} 
            auth sufficient pam_faillock.so authsucc audit deny=5 unlock_time={{ pass_unlock_time }} 
            auth required pam_deny.so
    - name: Add required config to /etc/pam.d/system-auth
      ansible.builtin.blockinfile:
        path: /etc/pam.d/system-auth
        block: |
          auth required pam_env.so 
          auth required pam_faillock.so preauth audit silent deny=5 unlock_time={{ pass_unlock_time }} 
          auth [success=1 default=bad] pam_unix.so 
          auth [default=die] pam_faillock.so authfail audit deny=5 unlock_time={{ pass_unlock_time }} 
          auth sufficient pam_faillock.so authsucc audit deny=5 unlock_time={{ pass_unlock_time }} 
          auth required pam_deny.so
  when: pass_lock_accounts

- name: Ensure that passwords expire on configured interval
  ansible.builtin.lineinfile:
    path: /etc/login.defs
    regexp: '^PASS_MAX_DAYS\s+\d'
    line: 'PASS_MAX_DAYS   {{ pass_expire_days }}'
  when: pass_expires
